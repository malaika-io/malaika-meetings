script.
    document.addEventListener("DOMContentLoaded", function (event) {
        const url = 'https://malaika.io';
        //const url = 'http://' + location.host;
        const OneSignal = window.OneSignal || [];
        if (url === "https://malaika.io") {
            OneSignal.push(function () {
                OneSignal.init({
                    appId: "33332867-5fd8-4785-846d-bcebf163bfef",
                });
            });
        }

        const ws = io.connect(url, {
            path: '/kurento',
            transports: ['websocket', 'polling']
        });

        let videoInput;
        let videoOutput;
        let webRtcPeer;
        let state = false;
        videoInput = document.getElementById('videoInput');
        videoOutput = document.getElementById('videoOutput');
        $("#call").click(call)
        document.getElementById('stop').addEventListener('click', function () {
            stop();
        });

        ws.on('connect', function () {
            console.log('connect')
        });

        ws.on('leaveChat', function (message) {
            console.log(message)
        });

        ws.on('chat', function (message) {
            $('#message_animation').hide()
            $('<li class="sent last typing-m"> <div class="media"> <div class="profile mr-4 bg-size" style="background-image: url(&quot;/public/images/contact/2.jpg&quot;); background-size: cover; background-position: center center; display: block;"><img class="bg-img" src="/public/images/contact/2.jpg" alt="Avatar" style="display: none;"></div><div class="media-body"> <div class="contact-name"> <h5>' + message.from + '</h5> <h6>01:42 AM</h6> <ul class="msg-box"> <li> <h5> <div class="type"> <div class="typing-loader"></div></div></h5> </li></ul> </div></div></div></li>'
            ).appendTo($('.messages .chatappend'));
            $(".messages").animate({scrollTop: $(document).height()}, "fast");
            setTimeout(function () {
                $('.typing-m').hide();
                $('<li class="sent"> <div class="media"> <div class="profile mr-4 bg-size" style="background-image: url(&quot;../assets/images/contact/2.jpg&quot;); background-size: cover; background-position: center center; display: block;"></div><div class="media-body"> <div class="contact-name"> <h5>' + message.from + '</h5> <h6>01:35 AM</h6> <ul class="msg-box"> <li> <h5>' + message.txt + '</h5> <div class="badge badge-success sm ml-2"> R</div></li></ul> </div></div></div></li>').appendTo($('.messages .chatappend'));
                $(".messages").animate({scrollTop: $(document).height()}, "fast");
            }, 2000)
        });

        ws.on('callResponse', function (parsedMessage) {
            callResponse(parsedMessage);
        });

        ws.on('incomingCall', function (parsedMessage) {
            incomingCall(parsedMessage);
        });

        ws.on('startCommunication', function (parsedMessage) {
            startCommunication(parsedMessage);
        });

        ws.on('stopCommunication', function (parsedMessage) {
            stop(true);
        });

        ws.on('iceCandidate', function (message) {
            webRtcPeer.addIceCandidate(message.candidate)
        });


        // $('#videocall').on('hidden.bs.modal', function () {
        //     //$('#confercall').modal();
        // });


        $(".messages").animate({scrollTop: $(document).height()}, "fast");
        $('.submit').on('click', function () {
            newMessage();
        });
        $(window).on('keydown', function (e) {
            if (e.which == 13) {
                if (!e.target.value) {
                    return false
                }
                newMessage();
                return false;
            }
        });

        $(".emojis-sub-contain ul li").click(function () {
            var number = $(this).html();
            $("#setemoj").focus().val(function () {
                return this.value + number;
                $(".messages").animate({
                    scrollTop: $(document).height()
                }, "fast");
            });
            $('#send-msg').removeClass('disabled').removeAttr("disabled")
        });


        $('#send-msg').addClass('disabled').attr("disabled", "disabled")
        $("#setemoj").keyup(function (e) {
            if (!e.target.value) {
                $('#send-msg').addClass('disabled').attr("disabled", "disabled")
            } else {
                $('#send-msg').removeClass('disabled').removeAttr("disabled")
            }
        });

        function newMessage() {
            let message = $('.message-input input').val();
            if ($.trim(message) == '') {
                return false;
            }
            let contact = !{JSON.stringify(contact)}
            ws.emit('chat', {
                content: message,
                receiver_id: contact.id
            });
            $('<li class="replies"> <div class="media"> <div class="profile mr-4 bg-size" style="background-image: url(&quot;../images/contact/1.jpg&quot;); background-size: cover; background-position: center center;"></div><div class="media-body"> <div class="contact-name"> <h5>Moi</h5> <h6>01:42 AM</h6> <ul class="msg-box"> <li> <h5>' + message + '</h5> </li></ul> </div></div></div></li>').appendTo($('.messages .chatappend'));
            $('.message-input input').val(null);
            $('.chat-main .active .details h6').html('<span>You : </span>' + message);
            $(".messages").animate({scrollTop: $(document).height()}, "fast");
        };


        function call() {
            showSpinner(videoInput, videoOutput);
            const constraints = {
                audio: true,
                video: {
                    width: 640,
                    framerate: 15
                }
            };

            const options = {
                localVideo: videoInput,
                remoteVideo: videoOutput,
                onicecandidate: onIceCandidate,
                //mediaConstraints: constraints
            };

            webRtcPeer = kurentoUtils.WebRtcPeer.WebRtcPeerSendrecv(options, function (error) {
                this.generateOffer(onOffer);
            });
        }

        function onOffer(error, offerSdp) {
            let contact = !{JSON.stringify(contact)};
            let user = !{JSON.stringify(user)};
            const message = {
                from: user.id,
                to: contact.id,
                sdpOffer: offerSdp
            };
            ws.emit('call', message);
        }

        function onIceCandidate(candidate) {
            const message = {
                id: 'onIceCandidate',
                candidate: candidate
            };
            ws.emit('onIceCandidate', message);
        }

        function callResponse(message) {
            if (message.response !== 'accepted') {
                const errorMessage = message.message ? message.message : 'Unknown reason for call rejection.';
                stop(true);
            } else {
                webRtcPeer.processAnswer(message.sdpAnswer);
            }
        }

        function incomingCall(message) {
            let user = !{JSON.stringify(user)};
            $('#confercall').modal();
            document.getElementById('accept-call').addEventListener('click', function () {
                $('#confercall').modal('hide');
                $('#videocall').modal();
                showSpinner(videoInput, videoOutput);

                const options = {
                    localVideo: videoInput,
                    remoteVideo: videoOutput,
                    onicecandidate: onIceCandidate
                };
                webRtcPeer = kurentoUtils.WebRtcPeer.WebRtcPeerSendrecv(options, function (error) {
                    this.generateOffer(function (error, offerSdp) {
                        const response = {
                            me: user.id,
                            id: 'incomingCallResponse',
                            from: message.from,
                            callResponse: 'accept',
                            sdpOffer: offerSdp
                        };
                        ws.emit('incomingCallResponse', response)
                    });
                });
            });
            document.getElementById('reject-call').addEventListener('click', function () {
                const response = {
                    id: 'incomingCallResponse',
                    me: user.id,
                    from: message.from,
                    callResponse: 'reject',
                    message: 'user declined'
                };
                ws.emit('incomingCallResponse', response)
                stop(true);
            });
        }

        function startCommunication(message) {
            webRtcPeer.processAnswer(message.sdpAnswer);
        }

        function stop(message) {
            console.log('stop', message);
            //state = true;
            let user = !{JSON.stringify(user)};
            if (webRtcPeer) {
                webRtcPeer.dispose();
                webRtcPeer = null;
                if (!message) {
                    ws.emit('stop', {
                        id: user.id
                    })
                }
            }
            hideSpinner(videoInput, videoOutput);
        }

        function showSpinner() {
            for (var i = 0; i < arguments.length; i++) {
                arguments[i].poster = '/public/images/transparent-1px.png';
                arguments[i].style.background = 'center transparent url("/public/images/spinner.gif") no-repeat';
            }
        }

        function hideSpinner() {
            for (var i = 0; i < arguments.length; i++) {
                arguments[i].src = '';
                arguments[i].poster = '/public/images/webrtc.png';
                arguments[i].style.background = '';
            }
        }
    });

